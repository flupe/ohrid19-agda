-- WHILE language (C compatible syntax)

-- A BNFC file consists of comments, pragmas, and labelled Backus-Naur Form
-- (LBNF) rules
--
--   RuleName. NonTerminal ::= SententialForm ;
--
-- where RuleName and NonTerminal stand for identifiers
-- and SententialForm for a space-separated sequence
-- of terminals and non-terminals.

-- The first NonTerminal defines the language generated by the grammar.

Prg.    Program ::= "int" "main" "(" ")" "{" "printInt" Exp6 ";" "}";

EInt.   Exp6 ::= Integer;
EBool.  Exp6 ::= Boolean;

EMul.   Exp5 ::= Exp5 "*" Exp6;           -- left-associative
EDiv.   Exp5 ::= Exp5 "/" Exp6;           -- left-associative

EPlus.  Exp4 ::= Exp4 "+" Exp5;           -- left-associative
EMinus. Exp4 ::= Exp4 "-" Exp5;           -- left-associative

EGt.    Exp3 ::= Exp4 ">" Exp4;           -- non-associative
ENot.   Exp3 ::= "~" Exp3;

EAnd.   Exp2 ::= Exp3 "&&" Exp2;          -- left-associative
EOr.    Exp1 ::= Exp1 "||" Exp2;          -- left-associative

ECond.  Exp  ::= Exp1 "?" Exp1 ":" Exp1;  -- non-associative

coercions Exp 7;

-- Added by the coercions pragma:
--
-- _.   Exp7 ::= "(" Exp ")";
-- _.   Exp6 ::= Exp7       ; 
-- _.   Exp5 ::= Exp6       ;
-- _.   Exp4 ::= Exp5       ;
-- _.   Exp3 ::= Exp4       ;
-- _.   Exp2 ::= Exp3       ;
-- _.   Exp1 ::= Exp2       ;
-- _.   Exp  ::= Exp1       ;

BTrue.  Boolean ::= "true" ;
BFalse. Boolean ::= "false";

TBool.  Type ::= "bool";
TInt.   Type ::= "int" ;

-- Pragmas for the lexer:

comment "#"      ;  -- line comment starting with #
comment "//"     ;  -- line comment starting with //
comment "/*" "*/";  -- block comment between /* and */
